{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconsole.log('ðŸ”— API Base URL:', API_BASE_URL);\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 30000\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('healthcareToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    localStorage.removeItem('healthcareToken');\n    localStorage.removeItem('healthcareUser');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: async userData => {\n    const response = await api.post('/register', userData);\n    return response.data;\n  },\n  login: async credentials => {\n    const response = await api.post('/login', credentials);\n    return response.data;\n  }\n};\n\n// Doctors API\nexport const doctorsAPI = {\n  getAllDoctors: async (filters = {}) => {\n    const params = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, value);\n    });\n    const response = await api.get(`/doctors?${params.toString()}`);\n    return response.data;\n  },\n  getDoctorById: async id => {\n    const response = await api.get(`/doctors/${id}`);\n    return response.data;\n  },\n  getSpecialties: async () => {\n    const response = await api.get('/specialties');\n    return response.data;\n  },\n  getCities: async () => {\n    const response = await api.get('/cities');\n    return response.data;\n  }\n};\n\n// Appointments API\nexport const appointmentsAPI = {\n  bookAppointment: async appointmentData => {\n    const response = await api.post('/appointments', appointmentData);\n    return response.data;\n  },\n  getAppointments: async () => {\n    const response = await api.get('/appointments');\n    return response.data;\n  },\n  cancelAppointment: async appointmentId => {\n    const response = await api.delete(`/appointments/${appointmentId}`);\n    return response.data;\n  }\n};\n\n// AI API\nexport const aiAPI = {\n  analyzeSymptoms: async symptomsData => {\n    const response = await api.post('/ai/analyze-symptoms', symptomsData);\n    return response.data;\n  },\n  getSpecialties: async () => {\n    const response = await api.get('/ai/specialties');\n    return response.data;\n  }\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","status","removeItem","window","location","href","Promise","reject","authAPI","register","userData","post","data","login","credentials","doctorsAPI","getAllDoctors","filters","params","URLSearchParams","Object","entries","forEach","key","value","append","get","toString","getDoctorById","id","getSpecialties","getCities","appointmentsAPI","bookAppointment","appointmentData","getAppointments","cancelAppointment","appointmentId","delete","aiAPI","analyzeSymptoms","symptomsData","healthAPI","checkHealth"],"sources":["C:/Users/praga/OneDrive/Desktop/healthcare-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconsole.log('ðŸ”— API Base URL:', API_BASE_URL);\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 30000,\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('healthcareToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      localStorage.removeItem('healthcareToken');\r\n      localStorage.removeItem('healthcareUser');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: async (userData) => {\r\n    const response = await api.post('/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  login: async (credentials) => {\r\n    const response = await api.post('/login', credentials);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Doctors API\r\nexport const doctorsAPI = {\r\n  getAllDoctors: async (filters = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value) params.append(key, value);\r\n    });\r\n    \r\n    const response = await api.get(`/doctors?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  getDoctorById: async (id) => {\r\n    const response = await api.get(`/doctors/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getSpecialties: async () => {\r\n    const response = await api.get('/specialties');\r\n    return response.data;\r\n  },\r\n\r\n  getCities: async () => {\r\n    const response = await api.get('/cities');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Appointments API\r\nexport const appointmentsAPI = {\r\n  bookAppointment: async (appointmentData) => {\r\n    const response = await api.post('/appointments', appointmentData);\r\n    return response.data;\r\n  },\r\n\r\n  getAppointments: async () => {\r\n    const response = await api.get('/appointments');\r\n    return response.data;\r\n  },\r\n\r\n  cancelAppointment: async (appointmentId) => {\r\n    const response = await api.delete(`/appointments/${appointmentId}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// AI API\r\nexport const aiAPI = {\r\n  analyzeSymptoms: async (symptomsData) => {\r\n    const response = await api.post('/ai/analyze-symptoms', symptomsData);\r\n    return response.data;\r\n  },\r\n\r\n  getSpecialties: async () => {\r\n    const response = await api.get('/ai/specialties');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Health check\r\nexport const healthAPI = {\r\n  checkHealth: async () => {\r\n    const response = await api.get('/health');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}